/* Disclaimer: This code was generated by Bard, a large language model from Google AI,
   based on the provided index.js script and adapted to use ethers.js for Ethereum key pair generation.
   It is intended for educational and testing purposes only.
*/

const { ethers } = require('ethers');

// Function to generate a key pair (public and private)
async function generateKeyPair() {
  const wallet = await ethers.Wallet.createRandom();
  return {
    publicKey: wallet.publicKey,
    privateKey: wallet.privateKey,
  };
}

// Function to create multiple key pairs (optional)
async function createSeveralKeys(num) {
  if (num <= 0 || num > 10) {
    throw new Error('Number of key pairs must be between 1 and 10');
  }

  const keyPairs = [];
  for (let i = 0; i < num; i++) {
    keyPairs.push(await generateKeyPair());
  }
  return keyPairs;
}

// Get the number of key pairs from command line argument (optional)
const numKeyPairs = parseInt(process.argv[2]);

// Use a Promise-based approach
(async () => {
  if (numKeyPairs) {
    const keyPairs = await createSeveralKeys(numKeyPairs);
    console.log(keyPairs);
  } else {
    // Generate a single key pair by default
    const keyPair = await generateKeyPair();
    console.log(keyPair);
  }
})();
